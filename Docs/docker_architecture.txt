															docker architecture requirements

1. В первую очередь стоит таск уяснить аспекты составляющие архитектуру проекта:

a) Networks - все контейнера будут в одном месте, продумать-прописать порты

b) Volumes - Postgres

			 избежать потери данных при перезапуске, замапив явно или автоматически volume на хосте и в контейнере, чтобы при compose-up новый контейнер 
			 нашел контейнер с прошлого запуска и получил его данные
			 
			 сделать подобный mapping и для бэкап volume, Postgres
			 
			 
			 Airflow
			 
			 расшарить volumes между ui-webserver и scheduler имели доступ к общей папке с графами (dag) 
			 ...
			 еще
			 
			 
			 Elasticsearch
			 
			 маппинг аналогично с Postgres
			 
c) Modules - Airflow (docker-compose.airflow.yml)

			a1) worker - celery -> celery backend > требует redis, таск dag читается из файловой системы пишется в postgres, scheduler берет таск оттуда
				отправляет в redis selery worker читает из redis и отчитывается в основную базу что взяли в работу
			b1) scheduler, выставить environment, depends on, restart always?
			c1) webserver - симпатичный puckel 
			d1) sqlite (однопоточная база) -> postgres image (хранит статусы dag), отвечает на запросы webserver для отображения статусов
			e1) Кирилл сказал добавить еще один контейнер для маленькой служебной базы, для авторизаций, сессий итд (уже поднятый postgres юзать мб)
			
			API (от Кирилла, я хз как это) -  попросить помощи у разработчиков (подождать недельку до приезда Кирилла)
			
			a1) webserver для маркетологов админов
			b1) для запросов из приложения
			
			
			Overall (docker-compose.yml):
			
			db
			elasticsearch
			redis
			
			+ utility операционные вещи
			

2. Нужно будет сделать dev версию с полной конфигурацией портов, потестить собрать и запушить в приватный хаб, дальше юзать скачанную с хаба и возможно
   юзать как prod
			
			
			
			
			
			 
			 